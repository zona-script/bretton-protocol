{
  "contractName": "StakedRewardPool",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_DURATION",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "earned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastTimeRewardApplicable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastUpdateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        }
      ],
      "name": "notifyRewardAmount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "periodFinish",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardDistributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardPerShareStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardDistributor",
          "type": "address"
        }
      ],
      "name": "setRewardDistributor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "sharesOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userRewardPerSharePaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "exit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_DURATION\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerShareStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardDistributor\",\"type\":\"address\"}],\"name\":\"setRewardDistributor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerSharePaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"claim()\":{\"details\":\"Claim outstanding rewards for sender\",\"return\":\"uint256 amount claimed\"},\"constructor\":{\"details\":\"StakedRewardPool constructor\",\"params\":{\"_stakingToken\":\"Token to be staked\"}},\"earned(address)\":{\"details\":\"Calculates the amount of rewards earned for a given account\",\"params\":{\"_account\":\"User for which calculate earned rewards for\"},\"return\":\"uint256 Earned rewards\"},\"exit()\":{\"details\":\"Withdraws stake from pool and claims any rewards\"},\"getCurrentTimestamp()\":{\"details\":\"Get current block timestamp. For easy mocking in test\"},\"lastTimeRewardApplicable()\":{\"details\":\"Gets the last applicable timestamp for this reward period\"},\"notifyRewardAmount(uint256)\":{\"details\":\"Notifies the contract that new rewards have been added. Calculates an updated rewardPerSecond based on the rewards in period.\",\"params\":{\"_reward\":\"Units of RewardToken that have been added to the pool\"}},\"rewardPerShare()\":{\"details\":\"Calculate rewardsPerShare\",\"return\":\"uint256 rewardsPerShare\"},\"sharesOf(address)\":{\"details\":\"Get the share of a given account\",\"params\":{\"_account\":\"User for which to retrieve balance\"},\"return\":\"uint256 shares\"},\"stake(address,uint256)\":{\"details\":\"Deposits a given amount of StakingToken from sender, increase beneficiary shares\",\"params\":{\"_amount\":\"Units of shares\",\"_beneficiary\":\"Account to stake for\"}},\"totalShares()\":{\"details\":\"Get the total number of shares in pool\",\"return\":\"uint256 total shares\"},\"withdraw(address,uint256)\":{\"details\":\"Remove a given amount of shares from sender, decrease msg.sender shares\",\"params\":{\"_amount\":\"Units of shares\",\"_beneficiary\":\"Account to withdraw to\"}}},\"title\":\"StakedRewardPool\"},\"userdoc\":{\"methods\":{},\"notice\":\"RewardPool that track shares based on staking of a stakingToken\"}},\"settings\":{\"compilationTarget\":{\"/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/StakedRewardPool.sol\":\"StakedRewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":50000},\"remappings\":[]},\"sources\":{\"/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/Address.sol\":{\"keccak256\":\"0x76c8aee342dc08187b690967cc526396f3d03427b23d905e6b15bae19e593ea7\",\"urls\":[\"bzz-raw://68d0df65cd9eb24960664db8633da9bf1fe4c46bb80cea57beac979476a6c5bb\",\"dweb:/ipfs/QmcABikBkTvvdvXfjueJLCKjConZBTv5gEuxd22AoQAV8N\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/Context.sol\":{\"keccak256\":\"0x776e6d69f4576c9af9c1b219d1f56817be1d2ff5b088e223a33a1e335006717b\",\"urls\":[\"bzz-raw://dabd5f0a911f796f190647c46e771e47302ac51b7f1a06e2196188de7219419b\",\"dweb:/ipfs/QmZyT9nTPw1EhyGEMvh7tzT5FRNtGxEa5fidbSNkeBrTFb\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/IERC20.sol\":{\"keccak256\":\"0x57cb879fd4da72ff01a48a97273ba47330571bd16fb85c1e37aef1413c1b722f\",\"urls\":[\"bzz-raw://1a3236f6e530ab5a86e1b4b4813d2bea5a47f4996c2741eb189af900f2d4f579\",\"dweb:/ipfs/QmX1MqLLtf2DpdJE59ALrPuiWBt2bUJdG3kLhdF8w92vEb\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/Math.sol\":{\"keccak256\":\"0x8769bc115e613e504fdbe9b0f33797b2de2dfff64e9ea261252c87dfb052155d\",\"urls\":[\"bzz-raw://d65716dc0feb618900cbd2bdff366576f703342ab163488bcd1539f89cc50a7e\",\"dweb:/ipfs/QmZfcwUhTbYkxjoP6rMyg6EBJobwXbmozehiCtesZhUFJr\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/Ownable.sol\":{\"keccak256\":\"0xee2cf966a37b6b6cc04350c8ff9500da69ced3059228a1e83517192346b6f609\",\"urls\":[\"bzz-raw://d507a30544bed71e22967747065e42aa64ff57aab8f0477907ecf8a8d85950ce\",\"dweb:/ipfs/QmVVoLJHzRiNNRL2PwVZKa4sdc9sv9HjPEHpz9C8xNTcWn\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/SafeERC20.sol\":{\"keccak256\":\"0x9f432069afd65187e878b57ece5f3ebd598bc22afce92211bd2c893e0d6991ea\",\"urls\":[\"bzz-raw://1f32b2b18e7d1b5a278679815ce5c995b1a5910f51c0185193f519919925272c\",\"dweb:/ipfs/QmTWrthX4SU5EJUNsEUQxrtx2rZ5i8F2672KNwCKC6rQpR\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/SafeMath.sol\":{\"keccak256\":\"0x743fc7fdd798a2d6452f45343b9b0a192846873d34034a4bb36fefa548ec46be\",\"urls\":[\"bzz-raw://eafc248744d568a95e7275e48736bba2ef602618266df43af7fd23463b9473f6\",\"dweb:/ipfs/QmcMXo9x4hJ7J5TrVbZww2xxzLqKizUANzT9i63YVtCHrJ\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/StakedRewardPool.sol\":{\"keccak256\":\"0x813102e98a71e772f01d30584a005f7fb8ca06d60dcfa77e6ed4b77daf900287\",\"urls\":[\"bzz-raw://da0f6510db49d8e07fe13e3e9e89724b6b3e98ca32d0c2ded19397fe28ddb609\",\"dweb:/ipfs/QmQ8tQjC6obaAfonoLhTUQ2kKf28JMvePZ1aT5Fx6jgdja\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/abstract/Pool.sol\":{\"keccak256\":\"0x2d7ad16921f4051814ab133687384f20ac3db3d820993a403271fd9570172066\",\"urls\":[\"bzz-raw://a4ad0e34de8572fb448231c6be62bb8d230b744a3bfcd9b91bd5f26dd25876af\",\"dweb:/ipfs/QmR9eNPPuUJ1vtVxqFSq724J7HN1sjivkyJSREmGM4mz34\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/abstract/RewardDistributionRecipient.sol\":{\"keccak256\":\"0x5b5a68ae1005bea6169bf365f906d460bc9a0e88388b0befb1ea9226674eca9f\",\"urls\":[\"bzz-raw://cd407517755abfccfe181c7502043a4772816a62e47c4db6913c4239ba54c80e\",\"dweb:/ipfs/QmYL5qHF4HUTDnrnUtYgRRrpQrbpc8guT82hzHXGyS8ctw\"]},\"/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/abstract/RewardPool.sol\":{\"keccak256\":\"0x4179525c1f4762c39a1f0e8b46cc0036c8324ba892be7b8a5cead83205108e3b\",\"urls\":[\"bzz-raw://476153f5e961d300018a0f76ff1d6bf0ad660bb3bf8ec08b0b0139336a6ce4b9\",\"dweb:/ipfs/QmR5DXALbyfhdLs3RfTyPo6ofQvpeT2ADyApYxGzBCK1Xo\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600655600060075534801561001a57600080fd5b506040516119903803806119908339818101604052606081101561003d57600080fd5b50805160208201516040909201519091908181336100626001600160e01b036100fb16565b600280546001600160a01b0319166001600160a01b0392831617908190556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600380546001600160a01b03199081166001600160a01b039384161790915560059390935560048054841692821692909217909155600c8054909216941693909317909255506100ff9050565b3390565b6118828061010e6000396000f3fe608060405234801561001057600080fd5b50600436106101ad5760003560e01c80638da5cb5b116100ee578063c8f33c9111610097578063f2fde38b11610071578063f2fde38b146103a5578063f3fef3a3146103d8578063f5eb42dc14610411578063f7c618c114610444576101ad565b8063c8f33c911461038d578063e9fad8ee14610395578063ebe2b12b1461039d576101ad565b8063a1809b95116100c8578063a1809b9514610319578063acc2166a1461034c578063adc9772e14610354576101ad565b80638da5cb5b146102ed5780638f10369a146102f55780638f32d59b146102fd576101ad565b8063446a2ec81161015b578063715018a611610135578063715018a61461027957806372f702f31461028157806380faa57d146102b2578063818ae1ce146102ba576101ad565b8063446a2ec8146102615780634e71d92d146102695780636c9230db14610271576101ad565b80631be052891161018c5780631be05289146102325780633a98ef391461023a5780633c6b16ab14610242576101ad565b80628cc262146101b25780630700037d146101f75780630ab747f01461022a575b600080fd5b6101e5600480360360208110156101c857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661044c565b60408051918252519081900360200190f35b6101e56004803603602081101561020d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104df565b6101e56104f1565b6101e56104f7565b6101e56104fd565b61025f6004803603602081101561025857600080fd5b5035610504565b005b6101e56106f9565b61025f610752565b6101e56108d4565b61025f6108d8565b6102896109ba565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101e56109d6565b6101e5600480360360208110156102d057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166109eb565b6102896109fd565b6101e5610a19565b610305610a1f565b604080519115158252519081900360200190f35b61025f6004803603602081101561032f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a5f565b610289610b19565b61025f6004803603604081101561036a57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610b35565b6101e5610bbd565b61025f610bc3565b6101e5610bdf565b61025f600480360360208110156103bb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610be5565b61025f600480360360408110156103ee57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610c64565b6101e56004803603602081101561042757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d4c565b610289610d74565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600b6020908152604080832054600a9092528220546104d991906104cd90670de0b6b3a7640000906104c1906104ac906104a06106f9565b9063ffffffff610d9016565b6104b588610d4c565b9063ffffffff610dd916565b9063ffffffff610e4c16565b9063ffffffff610e8e16565b92915050565b600b6020526000908152604090205481565b60095481565b60055481565b6000545b90565b60035473ffffffffffffffffffffffffffffffffffffffff16610525610f02565b73ffffffffffffffffffffffffffffffffffffffff16146105a757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43616c6c6572206973206e6f7420726577617264206469737472696275746f72604482015290519081900360640190fd5b6000806105b26106f9565b905080156106245760098190556105c76109d6565b60085573ffffffffffffffffffffffffffffffffffffffff821615610624576105ef8261044c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020908152604080832093909355600a9052208190555b600061062e6108d4565b905060065481106106555760055461064d90859063ffffffff610e4c16565b6007556106a4565b60065460009061066b908363ffffffff610d9016565b9050600061068460075483610dd990919063ffffffff16565b60055490915061069e906104c1888463ffffffff610e8e16565b60075550505b60088190556005546106bd90829063ffffffff610e8e16565b6006556040805185815290517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9181900360200190a150505050565b60006107036104fd565b6107105750600954610501565b61074d61073e61071e6104fd565b6104c1670de0b6b3a76400006104b56007546104b56008546104a06109d6565b6009549063ffffffff610e8e16565b905090565b33600061075d6106f9565b905080156107cf5760098190556107726109d6565b60085573ffffffffffffffffffffffffffffffffffffffff8216156107cf5761079a8261044c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020908152604080832093909355600a9052208190555b60006107da3361044c565b905080156108cf57336000818152600b602090815260408083208390556004805482517fa9059cbb0000000000000000000000000000000000000000000000000000000081529182019590955260248101869052905173ffffffffffffffffffffffffffffffffffffffff9094169363a9059cbb93604480840194938390030190829087803b15801561086c57600080fd5b505af1158015610880573d6000803e3d6000fd5b505050506040513d602081101561089657600080fd5b505060408051828152905133917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b505050565b4290565b6108e0610a1f565b61094b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60025460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600c5473ffffffffffffffffffffffffffffffffffffffff1681565b600061074d6109e36108d4565b600654610f06565b600a6020526000908152604090205481565b60025473ffffffffffffffffffffffffffffffffffffffff1690565b60075481565b60025460009073ffffffffffffffffffffffffffffffffffffffff16610a43610f02565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610a67610a1f565b610ad257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b600c54610b609073ffffffffffffffffffffffffffffffffffffffff1633308463ffffffff610f1c16565b610b6a8282610fb7565b60408051828152336020820152815173ffffffffffffffffffffffffffffffffffffffff8516927f9f9e4044c5742cca66ca090b21552bac14645e68bad7a92364a9d9ff18111a1c928290030190a25050565b60085481565b610bd533610bd033610d4c565b610c64565b610bdd610752565b565b60065481565b610bed610a1f565b610c5857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610c6181611097565b50565b80610c6e33610d4c565b1015610cc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611792602f913960400191505060405180910390fd5b610ccf3382611191565b600c54610cf99073ffffffffffffffffffffffffffffffffffffffff16838363ffffffff61127116565b60408051828152336020820152815173ffffffffffffffffffffffffffffffffffffffff8516927fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a928290030190a25050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b6000610dd283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112fe565b9392505050565b600082610de8575060006104d9565b82820282848281610df557fe5b0414610dd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806117c16021913960400191505060405180910390fd5b6000610dd283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113af565b600082820183811015610dd257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6000818310610f155781610dd2565b5090919050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610fb190859061142e565b50505050565b816000610fc26106f9565b90508015611034576009819055610fd76109d6565b60085573ffffffffffffffffffffffffffffffffffffffff82161561103457610fff8261044c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020908152604080832093909355600a9052208190555b6000831161108d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806117e26021913960400191505060405180910390fd5b610fb1848461166c565b73ffffffffffffffffffffffffffffffffffffffff8116611103576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061176c6026913960400191505060405180910390fd5b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b81600061119c6106f9565b9050801561120e5760098190556111b16109d6565b60085573ffffffffffffffffffffffffffffffffffffffff82161561120e576111d98261044c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020908152604080832093909355600a9052208190555b60008311611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061182d6021913960400191505060405180910390fd5b610fb184846116e4565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526108cf90849061142e565b600081848411156113a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561136c578181015183820152602001611354565b50505050905090810190601f1680156113995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181815283516024840152835190928392604490910191908501908083836000831561136c578181015183820152602001611354565b50600083858161142457fe5b0495945050505050565b61144d8273ffffffffffffffffffffffffffffffffffffffff1661172f565b6114b857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061152157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016114e4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611583576040519150601f19603f3d011682016040523d82523d6000602084013e611588565b606091505b5091509150816115f957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610fb15780806020019051602081101561161557600080fd5b5051610fb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611803602a913960400191505060405180910390fd5b60005461167f908263ffffffff610e8e16565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546116b7908263ffffffff610e8e16565b73ffffffffffffffffffffffffffffffffffffffff90921660009081526001602052604090209190915550565b6000546116f7908263ffffffff610d9016565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546116b7908263ffffffff610d9016565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906117635750808214155b94935050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735354414b45445f5245574152445f504f4f4c3a20776974686472617720696e73756666696369656e74207374616b65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775245574152445f504f4f4c3a2063616e6e6f74206d696e742030207368617265735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645245574152445f504f4f4c3a2063616e6e6f74206275726e203020736861726573a265627a7a72315820323306094961b32ff459b053f7ab57486ae557bf13617a4a52db2401874fbcec64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101ad5760003560e01c80638da5cb5b116100ee578063c8f33c9111610097578063f2fde38b11610071578063f2fde38b146103a5578063f3fef3a3146103d8578063f5eb42dc14610411578063f7c618c114610444576101ad565b8063c8f33c911461038d578063e9fad8ee14610395578063ebe2b12b1461039d576101ad565b8063a1809b95116100c8578063a1809b9514610319578063acc2166a1461034c578063adc9772e14610354576101ad565b80638da5cb5b146102ed5780638f10369a146102f55780638f32d59b146102fd576101ad565b8063446a2ec81161015b578063715018a611610135578063715018a61461027957806372f702f31461028157806380faa57d146102b2578063818ae1ce146102ba576101ad565b8063446a2ec8146102615780634e71d92d146102695780636c9230db14610271576101ad565b80631be052891161018c5780631be05289146102325780633a98ef391461023a5780633c6b16ab14610242576101ad565b80628cc262146101b25780630700037d146101f75780630ab747f01461022a575b600080fd5b6101e5600480360360208110156101c857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661044c565b60408051918252519081900360200190f35b6101e56004803603602081101561020d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104df565b6101e56104f1565b6101e56104f7565b6101e56104fd565b61025f6004803603602081101561025857600080fd5b5035610504565b005b6101e56106f9565b61025f610752565b6101e56108d4565b61025f6108d8565b6102896109ba565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101e56109d6565b6101e5600480360360208110156102d057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166109eb565b6102896109fd565b6101e5610a19565b610305610a1f565b604080519115158252519081900360200190f35b61025f6004803603602081101561032f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a5f565b610289610b19565b61025f6004803603604081101561036a57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610b35565b6101e5610bbd565b61025f610bc3565b6101e5610bdf565b61025f600480360360208110156103bb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610be5565b61025f600480360360408110156103ee57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610c64565b6101e56004803603602081101561042757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d4c565b610289610d74565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600b6020908152604080832054600a9092528220546104d991906104cd90670de0b6b3a7640000906104c1906104ac906104a06106f9565b9063ffffffff610d9016565b6104b588610d4c565b9063ffffffff610dd916565b9063ffffffff610e4c16565b9063ffffffff610e8e16565b92915050565b600b6020526000908152604090205481565b60095481565b60055481565b6000545b90565b60035473ffffffffffffffffffffffffffffffffffffffff16610525610f02565b73ffffffffffffffffffffffffffffffffffffffff16146105a757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43616c6c6572206973206e6f7420726577617264206469737472696275746f72604482015290519081900360640190fd5b6000806105b26106f9565b905080156106245760098190556105c76109d6565b60085573ffffffffffffffffffffffffffffffffffffffff821615610624576105ef8261044c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020908152604080832093909355600a9052208190555b600061062e6108d4565b905060065481106106555760055461064d90859063ffffffff610e4c16565b6007556106a4565b60065460009061066b908363ffffffff610d9016565b9050600061068460075483610dd990919063ffffffff16565b60055490915061069e906104c1888463ffffffff610e8e16565b60075550505b60088190556005546106bd90829063ffffffff610e8e16565b6006556040805185815290517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9181900360200190a150505050565b60006107036104fd565b6107105750600954610501565b61074d61073e61071e6104fd565b6104c1670de0b6b3a76400006104b56007546104b56008546104a06109d6565b6009549063ffffffff610e8e16565b905090565b33600061075d6106f9565b905080156107cf5760098190556107726109d6565b60085573ffffffffffffffffffffffffffffffffffffffff8216156107cf5761079a8261044c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020908152604080832093909355600a9052208190555b60006107da3361044c565b905080156108cf57336000818152600b602090815260408083208390556004805482517fa9059cbb0000000000000000000000000000000000000000000000000000000081529182019590955260248101869052905173ffffffffffffffffffffffffffffffffffffffff9094169363a9059cbb93604480840194938390030190829087803b15801561086c57600080fd5b505af1158015610880573d6000803e3d6000fd5b505050506040513d602081101561089657600080fd5b505060408051828152905133917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b505050565b4290565b6108e0610a1f565b61094b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60025460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600c5473ffffffffffffffffffffffffffffffffffffffff1681565b600061074d6109e36108d4565b600654610f06565b600a6020526000908152604090205481565b60025473ffffffffffffffffffffffffffffffffffffffff1690565b60075481565b60025460009073ffffffffffffffffffffffffffffffffffffffff16610a43610f02565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610a67610a1f565b610ad257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b600c54610b609073ffffffffffffffffffffffffffffffffffffffff1633308463ffffffff610f1c16565b610b6a8282610fb7565b60408051828152336020820152815173ffffffffffffffffffffffffffffffffffffffff8516927f9f9e4044c5742cca66ca090b21552bac14645e68bad7a92364a9d9ff18111a1c928290030190a25050565b60085481565b610bd533610bd033610d4c565b610c64565b610bdd610752565b565b60065481565b610bed610a1f565b610c5857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610c6181611097565b50565b80610c6e33610d4c565b1015610cc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180611792602f913960400191505060405180910390fd5b610ccf3382611191565b600c54610cf99073ffffffffffffffffffffffffffffffffffffffff16838363ffffffff61127116565b60408051828152336020820152815173ffffffffffffffffffffffffffffffffffffffff8516927fcbcdbdf10631a43cc99c80acace8232649421c3f4f73919f16013d47c83a687a928290030190a25050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b6000610dd283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112fe565b9392505050565b600082610de8575060006104d9565b82820282848281610df557fe5b0414610dd2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806117c16021913960400191505060405180910390fd5b6000610dd283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506113af565b600082820183811015610dd257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6000818310610f155781610dd2565b5090919050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610fb190859061142e565b50505050565b816000610fc26106f9565b90508015611034576009819055610fd76109d6565b60085573ffffffffffffffffffffffffffffffffffffffff82161561103457610fff8261044c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020908152604080832093909355600a9052208190555b6000831161108d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806117e26021913960400191505060405180910390fd5b610fb1848461166c565b73ffffffffffffffffffffffffffffffffffffffff8116611103576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061176c6026913960400191505060405180910390fd5b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b81600061119c6106f9565b9050801561120e5760098190556111b16109d6565b60085573ffffffffffffffffffffffffffffffffffffffff82161561120e576111d98261044c565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020908152604080832093909355600a9052208190555b60008311611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061182d6021913960400191505060405180910390fd5b610fb184846116e4565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526108cf90849061142e565b600081848411156113a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561136c578181015183820152602001611354565b50505050905090810190601f1680156113995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181815283516024840152835190928392604490910191908501908083836000831561136c578181015183820152602001611354565b50600083858161142457fe5b0495945050505050565b61144d8273ffffffffffffffffffffffffffffffffffffffff1661172f565b6114b857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061152157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016114e4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611583576040519150601f19603f3d011682016040523d82523d6000602084013e611588565b606091505b5091509150816115f957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610fb15780806020019051602081101561161557600080fd5b5051610fb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611803602a913960400191505060405180910390fd5b60005461167f908263ffffffff610e8e16565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546116b7908263ffffffff610e8e16565b73ffffffffffffffffffffffffffffffffffffffff90921660009081526001602052604090209190915550565b6000546116f7908263ffffffff610d9016565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600160205260409020546116b7908263ffffffff610d9016565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906117635750808214155b94935050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735354414b45445f5245574152445f504f4f4c3a20776974686472617720696e73756666696369656e74207374616b65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775245574152445f504f4f4c3a2063616e6e6f74206d696e742030207368617265735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645245574152445f504f4f4c3a2063616e6e6f74206275726e203020736861726573a265627a7a72315820323306094961b32ff459b053f7ab57486ae557bf13617a4a52db2401874fbcec64736f6c63430005100032",
  "sourceMap": "245:1848:22:-;;;759:1:25;729:31;;799:1;766:34;;621:257:22;8:9:-1;5:2;;;30:1;27;20:12;5:2;621:257:22;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;621:257:22;;;;;;;;;;;;;;;;1359:10:25;245:12:13;-1:-1:-1;;;;;245:10:13;:12;:::i;:::-;236:6;:21;;-1:-1:-1;;;;;;236:21:13;-1:-1:-1;;;;;236:21:13;;;;;;;;272:40;;305:6;;;-1:-1:-1;;272:40:13;;-1:-1:-1;;272:40:13;217:17:24;:38;;-1:-1:-1;;;;;;217:38:24;;;-1:-1:-1;;;;;217:38:24;;;;;;;1402:8:25;:20;;;;1432:11;:34;;;;;;;;;;;;;;835:12:22;:36;;;;;;;;;;;;;;-1:-1:-1;245:1848:22;;-1:-1:-1;245:1848:22;134:96:8;213:10;134:96;:::o;245:1848:22:-;;;;;;;",
  "deployedSourceMap": "245:1848:22:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;245:1848:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3782:275:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3782:275:25;;;;:::i;:::-;;;;;;;;;;;;;;;;945:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;945:42:25;;;;:::i;841:35::-;;;:::i;700:23::-;;;:::i;606:117:23:-;;;:::i;4321:757:25:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4321:757:25;;:::i;:::-;;3202:381;;;:::i;2315:297::-;;;:::i;2720:128::-;;;:::i;611:137:13:-;;;:::i;324:26:22:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2940:163:25;;;:::i;882:57::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;882:57:25;;;;:::i;324:77:13:-;;;:::i;766:34:25:-;;;:::i;514:92:13:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;473:152:24;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;473:152:24;;;;:::i;118:32::-;;;:::i;1101:256:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1101:256:22;;;;;;;;;:::i;806:29:25:-;;;:::i;1978:113:22:-;;;:::i;729:31:25:-;;;:::i;753:107:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;753:107:13;;;;:::i;1551:344:22:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1551:344:22;;;;;;;;;:::i;878:135:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;878:135:23;;;;:::i;668:25:25:-;;;:::i;3782:275::-;4032:17;;;3861:7;4032:17;;;:7;:17;;;;;;;;;3951:22;:32;;;;;;3891:159;;4032:17;3891:120;;4006:4;;3891:94;;3930:54;;:16;:14;:16::i;:::-;:20;:54;:20;:54;:::i;:::-;3891:18;3900:8;3891;:18::i;:::-;:38;:94;:38;:94;:::i;:::-;:114;:120;:114;:120;:::i;:::-;:140;:159;:140;:159;:::i;:::-;3884:166;3782:275;-1:-1:-1;;3782:275:25:o;945:42::-;;;;;;;;;;;;;:::o;841:35::-;;;;:::o;700:23::-;;;;:::o;606:117:23:-;674:7;704:12;606:117;;:::o;4321:757:25:-;395:17:24;;;;379:12;:10;:12::i;:::-;:33;;;371:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4442:1:25;1645:25;1673:16;:14;:16::i;:::-;1645:44;-1:-1:-1;1771:21:25;;1768:389;;1808:20;:40;;;1879:26;:24;:26::i;:::-;1862:14;:43;1984:22;;;;1980:167;;2046:16;2053:8;2046:6;:16::i;:::-;2026:17;;;;;;;:7;:17;;;;;;;;:36;;;;2080:22;:32;;;:52;;;1980:167;4460:19;4482:21;:19;:21::i;:::-;4460:43;;4590:12;;4575:11;:27;4571:376;;4648:8;;4636:21;;:7;;:21;:11;:21;:::i;:::-;4618:15;:39;4571:376;;;4777:12;;4757:17;;4777:29;;4794:11;4777:29;:16;:29;:::i;:::-;4757:49;;4820:16;4839:30;4853:15;;4839:9;:13;;:30;;;;:::i;:::-;4927:8;;4820:49;;-1:-1:-1;4901:35:25;;:21;:7;4820:49;4901:21;:11;:21;:::i;:35::-;4883:15;:53;-1:-1:-1;;4571:376:25;4957:14;:28;;;5026:8;;5010:25;;4974:11;;5010:25;:15;:25;:::i;:::-;4995:12;:40;5051:20;;;;;;;;;;;;;;;;;2166:1;459::24;;4321:757:25;:::o;3202:381::-;3273:7;3300:13;:11;:13::i;:::-;3296:76;;-1:-1:-1;3341:20:25;;3334:27;;3296:76;3388:188;3424:140;3550:13;:11;:13::i;:::-;3424:110;3529:4;3424:89;3497:15;;3424:57;3466:14;;3424:26;:24;:26::i;:140::-;3388:20;;;:188;:24;:188;:::i;:::-;3381:195;;3202:381;:::o;2315:297::-;2368:10;1645:25;1673:16;:14;:16::i;:::-;1645:44;-1:-1:-1;1771:21:25;;1768:389;;1808:20;:40;;;1879:26;:24;:26::i;:::-;1862:14;:43;1984:22;;;;1980:167;;2046:16;2053:8;2046:6;:16::i;:::-;2026:17;;;;;;;:7;:17;;;;;;;;:36;;;;2080:22;:32;;;:52;;;1980:167;2394:14;2411:18;2418:10;2411:6;:18::i;:::-;2394:35;-1:-1:-1;2443:10:25;;2439:167;;2477:10;2491:1;2469:19;;;:7;:19;;;;;;;;:23;;;2506:11;;;:40;;;;;;;;;;;;;;;;;;;;2469:19;2506:11;;;;:20;;:40;;;;;2469:19;2506:40;;;;;;;:11;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;2506:40:25;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2506:40:25;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;2565:30:25;;;;;;;;2576:10;;2565:30;;;;;;2506:40;2565:30;;;2439:167;2166:1;2315:297;;:::o;2720:128::-;2826:15;2720:128;:::o;611:137:13:-;445:9;:7;:9::i;:::-;437:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;693:6;;672:40;;709:1;;672:40;693:6;;672:40;;709:1;;672:40;722:6;:19;;;;;;611:137::o;324:26:22:-;;;;;;:::o;2940:163:25:-;3021:7;3051:45;3060:21;:19;:21::i;:::-;3083:12;;3051:8;:45::i;882:57::-;;;;;;;;;;;;;:::o;324:77:13:-;388:6;;;;324:77;:::o;766:34:25:-;;;;:::o;514:92:13:-;593:6;;554:4;;593:6;;577:12;:10;:12::i;:::-;:22;;;570:29;;514:92;:::o;473:152:24:-;445:9:13;:7;:9::i;:::-;437:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;580:17:24;:38;;;;;;;;;;;;;;;473:152::o;118:32::-;;;;;;:::o;1101:256:22:-;1184:12;;:65;;:12;;1214:10;1234:4;1241:7;1184:65;:29;:65;:::i;:::-;1259:34;1271:12;1285:7;1259:11;:34::i;:::-;1309:41;;;;;;1339:10;1309:41;;;;;;;;;;;;;;;;;;1101:256;;:::o;806:29:25:-;;;;:::o;1978:113:22:-;2025:42;2034:10;2046:20;2055:10;2046:8;:20::i;:::-;2025:8;:42::i;:::-;2077:7;:5;:7::i;:::-;1978:113::o;729:31:25:-;;;;:::o;753:107:13:-;445:9;:7;:9::i;:::-;437:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:28;844:8;825:18;:28::i;:::-;753:107;:::o;1551:344:22:-;1669:7;1645:20;1654:10;1645:8;:20::i;:::-;:31;;1637:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1738:32;1750:10;1762:7;1738:11;:32::i;:::-;1780:12;;:48;;:12;;1806;1820:7;1780:48;:25;:48;:::i;:::-;1844:44;;;;;;1877:10;1844:44;;;;;;;;;;;;;;;;;;1551:344;;:::o;878:135:23:-;989:17;;959:7;989:17;;;:7;:17;;;;;;;878:135::o;668:25:25:-;;;;;;:::o;229:134:16:-;287:7;313:43;317:1;320;313:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;306:50;229:134;-1:-1:-1;;;229:134:16:o;560:241::-;618:7;641:6;637:45;;-1:-1:-1;670:1:16;663:8;;637:45;704:5;;;708:1;704;:5;:1;727:5;;;;;:10;719:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:130;864:7;890:39;894:1;897;890:39;;;;;;;;;;;;;;;;;:3;:39::i;48:176::-;106:7;137:5;;;160:6;;;;152:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;134:96:8;213:10;134:96;:::o;358:104:12:-;416:7;446:1;442;:5;:13;;454:1;442:13;;;-1:-1:-1;450:1:12;;358:104;-1:-1:-1;358:104:12:o;366:202:15:-;492:68;;;515:18;492:68;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;492:68:15;;;;;;;;25:18:-1;;61:17;;492:68:15;182:15:-1;515:27:15;179:29:-1;160:49;;466:95:15;;485:5;;466:18;:95::i;:::-;366:202;;;;:::o;5276:226:25:-;5370:8;1645:25;1673:16;:14;:16::i;:::-;1645:44;-1:-1:-1;1771:21:25;;1768:389;;1808:20;:40;;;1879:26;:24;:26::i;:::-;1862:14;:43;1984:22;;;;1980:167;;2046:16;2053:8;2046:6;:16::i;:::-;2026:17;;;;;;;:7;:17;;;;;;;;:36;;;;2080:22;:32;;;:52;;;1980:167;5412:1;5402:7;:11;5394:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5461:34;5477:8;5487:7;5461:15;:34::i;865:225:13:-;938:22;;;930:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:6;;1018:38;;;;;;;1039:6;;1018:38;;1039:6;;1018:38;1066:6;:17;;;;;;;;;;;;;;;865:225::o;5681:226:25:-;5775:8;1645:25;1673:16;:14;:16::i;:::-;1645:44;-1:-1:-1;1771:21:25;;1768:389;;1808:20;:40;;;1879:26;:24;:26::i;:::-;1862:14;:43;1984:22;;;;1980:167;;2046:16;2053:8;2046:6;:16::i;:::-;2026:17;;;;;;;:7;:17;;;;;;;;:36;;;;2080:22;:32;;;:52;;;1980:167;5817:1;5807:7;:11;5799:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5866:34;5882:8;5892:7;5866:15;:34::i;186:174:15:-;294:58;;;317:14;294:58;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;294:58:15;;;;;;;;25:18:-1;;61:17;;294:58:15;182:15:-1;317:23:15;179:29:-1;160:49;;268:85:15;;287:5;;268:18;:85::i;368:187:16:-;454:7;489:12;481:6;;;;473:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;473:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;524:5:16;;;368:187::o;941:252::-;1027:7;1127:12;1120:5;1112:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;1112:28:16;;1150:9;1166:1;1162;:5;;;;;;;941:252;-1:-1:-1;;;;;941:252:16:o;1542:587:15:-;1629:27;1637:5;1629:25;;;:27::i;:::-;1621:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1763:12;1777:23;1812:5;1804:19;;1824:4;1804:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;139:12;;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1804:25:15;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1762:67:15;;;;1847:7;1839:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1906:17;;:21;1902:221;;2046:10;2035:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2035:30:15;2027:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1211:198:23;1317:12;;:25;;1334:7;1317:25;:16;:25;:::i;:::-;1302:12;:40;;;1372:17;;;;;:7;:17;;;;;;:30;;1394:7;1372:30;:21;:30;:::i;:::-;1352:17;;;;;;;;:7;:17;;;;;:50;;;;-1:-1:-1;1211:198:23:o;1588:::-;1694:12;;:25;;1711:7;1694:25;:16;:25;:::i;:::-;1679:12;:40;;;1749:17;;;;;:7;:17;;;;;;:30;;1771:7;1749:30;:21;:30;:::i;47:368:7:-;107:4;326:20;;171:66;365:15;;;;;:42;;;396:11;384:8;:23;;365:42;357:51;47:368;-1:-1:-1;;;;47:368:7:o",
  "source": "pragma solidity 0.5.16;\n\nimport \"../externals/SafeERC20.sol\";\nimport \"../externals/IERC20.sol\";\n\nimport \"./abstract/RewardPool.sol\";\n\n/**\n * @title  StakedRewardPool\n * @notice RewardPool that track shares based on staking of a stakingToken\n */\ncontract StakedRewardPool is RewardPool {\n    using SafeERC20 for IERC20;\n\n    IERC20 public stakingToken;\n\n    event Staked(address indexed beneficiary, uint256 amount, address payer);\n    event Withdrawn(address indexed beneficiary, uint256 amount, address payer);\n\n    /**\n     * @dev StakedRewardPool constructor\n     * @param _stakingToken Token to be staked\n     */\n    constructor(\n        address _stakingToken,\n        uint256 _DURATION,\n        address _rewardToken\n    )\n        RewardPool (\n            _DURATION,\n            _rewardToken\n        )\n        public\n    {\n        stakingToken = IERC20(_stakingToken);\n    }\n\n    /*** PUBLIC ***/\n\n    /**\n     * @dev Deposits a given amount of StakingToken from sender, increase beneficiary shares\n     * @param _beneficiary Account to stake for\n     * @param _amount Units of shares\n     */\n    function stake(address _beneficiary, uint256 _amount)\n        public\n    {\n        stakingToken.safeTransferFrom(msg.sender, address(this), _amount);\n        _mintShares(_beneficiary, _amount);\n\n        emit Staked(_beneficiary, _amount, msg.sender);\n    }\n\n    /**\n     * @dev Remove a given amount of shares from sender, decrease msg.sender shares\n     * @param _beneficiary Account to withdraw to\n     * @param _amount Units of shares\n     */\n    function withdraw(address _beneficiary, uint256 _amount)\n        public\n    {\n        require(sharesOf(msg.sender) >= _amount, \"STAKED_REWARD_POOL: withdraw insufficient stake\");\n        _burnShares(msg.sender, _amount);\n        stakingToken.safeTransfer(_beneficiary, _amount);\n\n        emit Withdrawn(_beneficiary, _amount, msg.sender);\n    }\n\n    /**\n     * @dev Withdraws stake from pool and claims any rewards\n     */\n    function exit()\n        external\n    {\n        withdraw(msg.sender, sharesOf(msg.sender));\n        claim();\n    }\n}\n",
  "sourcePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/StakedRewardPool.sol",
  "ast": {
    "absolutePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/StakedRewardPool.sol",
    "exportedSymbols": {
      "StakedRewardPool": [
        3939
      ]
    },
    "id": 3940,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3807,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/SafeERC20.sol",
        "file": "../externals/SafeERC20.sol",
        "id": 3808,
        "nodeType": "ImportDirective",
        "scope": 3940,
        "sourceUnit": 2831,
        "src": "25:36:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/IERC20.sol",
        "file": "../externals/IERC20.sol",
        "id": 3809,
        "nodeType": "ImportDirective",
        "scope": 3940,
        "sourceUnit": 2396,
        "src": "62:33:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/abstract/RewardPool.sol",
        "file": "./abstract/RewardPool.sol",
        "id": 3810,
        "nodeType": "ImportDirective",
        "scope": 3940,
        "sourceUnit": 4441,
        "src": "97:35:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3811,
              "name": "RewardPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4440,
              "src": "274:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RewardPool_$4440",
                "typeString": "contract RewardPool"
              }
            },
            "id": 3812,
            "nodeType": "InheritanceSpecifier",
            "src": "274:10:22"
          }
        ],
        "contractDependencies": [
          1887,
          2578,
          4033,
          4080,
          4440
        ],
        "contractKind": "contract",
        "documentation": "@title  StakedRewardPool\n@notice RewardPool that track shares based on staking of a stakingToken",
        "fullyImplemented": true,
        "id": 3939,
        "linearizedBaseContracts": [
          3939,
          4440,
          4080,
          2578,
          1887,
          4033
        ],
        "name": "StakedRewardPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3815,
            "libraryName": {
              "contractScope": null,
              "id": 3813,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2830,
              "src": "297:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$2830",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "291:27:22",
            "typeName": {
              "contractScope": null,
              "id": 3814,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2395,
              "src": "311:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2395",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 3817,
            "name": "stakingToken",
            "nodeType": "VariableDeclaration",
            "scope": 3939,
            "src": "324:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2395",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3816,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2395,
              "src": "324:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2395",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3825,
            "name": "Staked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3819,
                  "indexed": true,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "370:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3821,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "399:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3823,
                  "indexed": false,
                  "name": "payer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "415:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:60:22"
            },
            "src": "357:73:22"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3833,
            "name": "Withdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3827,
                  "indexed": true,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "451:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3829,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "480:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3831,
                  "indexed": false,
                  "name": "payer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "496:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "450:60:22"
            },
            "src": "435:76:22"
          },
          {
            "body": {
              "id": 3852,
              "nodeType": "Block",
              "src": "825:53:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3846,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3817,
                      "src": "835:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2395",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3848,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "857:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3847,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
                        "src": "850:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2395_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "850:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2395",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "835:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2395",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3851,
                  "nodeType": "ExpressionStatement",
                  "src": "835:36:22"
                }
              ]
            },
            "documentation": "@dev StakedRewardPool constructor\n@param _stakingToken Token to be staked",
            "id": 3853,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3842,
                    "name": "_DURATION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3837,
                    "src": "760:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3843,
                    "name": "_rewardToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3839,
                    "src": "783:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3844,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3841,
                  "name": "RewardPool",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4440,
                  "src": "735:10:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RewardPool_$4440_$",
                    "typeString": "type(contract RewardPool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "735:70:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3835,
                  "name": "_stakingToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "642:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3837,
                  "name": "_DURATION",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "673:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3839,
                  "name": "_rewardToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "700:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "632:94:22"
            },
            "returnParameters": {
              "id": 3845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:0:22"
            },
            "scope": 3939,
            "src": "621:257:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3883,
              "nodeType": "Block",
              "src": "1174:183:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3863,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "1214:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1214:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3866,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6074,
                            "src": "1234:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakedRewardPool_$3939",
                              "typeString": "contract StakedRewardPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakedRewardPool_$3939",
                              "typeString": "contract StakedRewardPool"
                            }
                          ],
                          "id": 3865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1226:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1226:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3868,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "1241:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3860,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3817,
                        "src": "1184:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2395",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2668,
                      "src": "1184:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2395_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2395_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:65:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3870,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:65:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3872,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3855,
                        "src": "1271:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3873,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "1285:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3871,
                      "name": "_mintShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4416,
                      "src": "1259:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3875,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:34:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3877,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3855,
                        "src": "1316:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3878,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "1330:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3879,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "1339:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1339:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3876,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3825,
                      "src": "1309:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 3881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1309:41:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3882,
                  "nodeType": "EmitStatement",
                  "src": "1304:46:22"
                }
              ]
            },
            "documentation": "@dev Deposits a given amount of StakingToken from sender, increase beneficiary shares\n@param _beneficiary Account to stake for\n@param _amount Units of shares",
            "id": 3884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3855,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3884,
                  "src": "1116:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3857,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3884,
                  "src": "1138:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1115:39:22"
            },
            "returnParameters": {
              "id": 3859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:0:22"
            },
            "scope": 3939,
            "src": "1101:256:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3921,
              "nodeType": "Block",
              "src": "1627:268:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3893,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5986,
                                "src": "1654:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1654:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 3892,
                            "name": "sharesOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3980,
                            "src": "1645:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 3895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1645:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3896,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3888,
                          "src": "1669:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1645:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5354414b45445f5245574152445f504f4f4c3a20776974686472617720696e73756666696369656e74207374616b65",
                        "id": 3898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1678:49:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3eb7a0dbec8daa6df0b72831b4ed865dfeaf18791af0376376c7c7efe2027642",
                          "typeString": "literal_string \"STAKED_REWARD_POOL: withdraw insufficient stake\""
                        },
                        "value": "STAKED_REWARD_POOL: withdraw insufficient stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3eb7a0dbec8daa6df0b72831b4ed865dfeaf18791af0376376c7c7efe2027642",
                          "typeString": "literal_string \"STAKED_REWARD_POOL: withdraw insufficient stake\""
                        }
                      ],
                      "id": 3891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5989,
                        5990
                      ],
                      "referencedDeclaration": 5990,
                      "src": "1637:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:91:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3900,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:91:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3902,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "1750:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1750:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3904,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "1762:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3901,
                      "name": "_burnShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4439,
                      "src": "1738:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3906,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:32:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3910,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3886,
                        "src": "1806:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3911,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "1820:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3907,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3817,
                        "src": "1780:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2395",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2643,
                      "src": "1780:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2395_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2395_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3913,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:48:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3915,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3886,
                        "src": "1854:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3916,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "1868:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3917,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "1877:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1877:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3914,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3833,
                      "src": "1844:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 3919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:44:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3920,
                  "nodeType": "EmitStatement",
                  "src": "1839:49:22"
                }
              ]
            },
            "documentation": "@dev Remove a given amount of shares from sender, decrease msg.sender shares\n@param _beneficiary Account to withdraw to\n@param _amount Units of shares",
            "id": 3922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3886,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1569:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3888,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1591:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1568:39:22"
            },
            "returnParameters": {
              "id": 3890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:0:22"
            },
            "scope": 3939,
            "src": "1551:344:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3937,
              "nodeType": "Block",
              "src": "2015:76:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3926,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "2034:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2034:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3929,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5986,
                              "src": "2055:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2055:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3928,
                          "name": "sharesOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3980,
                          "src": "2046:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 3931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2046:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3925,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3922,
                      "src": "2025:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3933,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:42:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3934,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4239,
                      "src": "2077:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3936,
                  "nodeType": "ExpressionStatement",
                  "src": "2077:7:22"
                }
              ]
            },
            "documentation": "@dev Withdraws stake from pool and claims any rewards",
            "id": 3938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1991:2:22"
            },
            "returnParameters": {
              "id": 3924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2015:0:22"
            },
            "scope": 3939,
            "src": "1978:113:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3940,
        "src": "245:1848:22"
      }
    ],
    "src": "0:2094:22"
  },
  "legacyAST": {
    "absolutePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/StakedRewardPool.sol",
    "exportedSymbols": {
      "StakedRewardPool": [
        3939
      ]
    },
    "id": 3940,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3807,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/SafeERC20.sol",
        "file": "../externals/SafeERC20.sol",
        "id": 3808,
        "nodeType": "ImportDirective",
        "scope": 3940,
        "sourceUnit": 2831,
        "src": "25:36:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/externals/IERC20.sol",
        "file": "../externals/IERC20.sol",
        "id": 3809,
        "nodeType": "ImportDirective",
        "scope": 3940,
        "sourceUnit": 2396,
        "src": "62:33:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mhe70/my-workspace/bretton-protocol/contracts/pools/abstract/RewardPool.sol",
        "file": "./abstract/RewardPool.sol",
        "id": 3810,
        "nodeType": "ImportDirective",
        "scope": 3940,
        "sourceUnit": 4441,
        "src": "97:35:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3811,
              "name": "RewardPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4440,
              "src": "274:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RewardPool_$4440",
                "typeString": "contract RewardPool"
              }
            },
            "id": 3812,
            "nodeType": "InheritanceSpecifier",
            "src": "274:10:22"
          }
        ],
        "contractDependencies": [
          1887,
          2578,
          4033,
          4080,
          4440
        ],
        "contractKind": "contract",
        "documentation": "@title  StakedRewardPool\n@notice RewardPool that track shares based on staking of a stakingToken",
        "fullyImplemented": true,
        "id": 3939,
        "linearizedBaseContracts": [
          3939,
          4440,
          4080,
          2578,
          1887,
          4033
        ],
        "name": "StakedRewardPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3815,
            "libraryName": {
              "contractScope": null,
              "id": 3813,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2830,
              "src": "297:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$2830",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "291:27:22",
            "typeName": {
              "contractScope": null,
              "id": 3814,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2395,
              "src": "311:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2395",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 3817,
            "name": "stakingToken",
            "nodeType": "VariableDeclaration",
            "scope": 3939,
            "src": "324:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2395",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3816,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2395,
              "src": "324:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2395",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3825,
            "name": "Staked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3819,
                  "indexed": true,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "370:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3821,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "399:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3823,
                  "indexed": false,
                  "name": "payer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3825,
                  "src": "415:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:60:22"
            },
            "src": "357:73:22"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3833,
            "name": "Withdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3827,
                  "indexed": true,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "451:27:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "451:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3829,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "480:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "480:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3831,
                  "indexed": false,
                  "name": "payer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3833,
                  "src": "496:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "450:60:22"
            },
            "src": "435:76:22"
          },
          {
            "body": {
              "id": 3852,
              "nodeType": "Block",
              "src": "825:53:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3846,
                      "name": "stakingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3817,
                      "src": "835:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2395",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3848,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3835,
                          "src": "857:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3847,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
                        "src": "850:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2395_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 3849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "850:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2395",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "835:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2395",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 3851,
                  "nodeType": "ExpressionStatement",
                  "src": "835:36:22"
                }
              ]
            },
            "documentation": "@dev StakedRewardPool constructor\n@param _stakingToken Token to be staked",
            "id": 3853,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3842,
                    "name": "_DURATION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3837,
                    "src": "760:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3843,
                    "name": "_rewardToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3839,
                    "src": "783:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3844,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3841,
                  "name": "RewardPool",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4440,
                  "src": "735:10:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RewardPool_$4440_$",
                    "typeString": "type(contract RewardPool)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "735:70:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3835,
                  "name": "_stakingToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "642:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3837,
                  "name": "_DURATION",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "673:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3839,
                  "name": "_rewardToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "700:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "632:94:22"
            },
            "returnParameters": {
              "id": 3845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:0:22"
            },
            "scope": 3939,
            "src": "621:257:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3883,
              "nodeType": "Block",
              "src": "1174:183:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3863,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "1214:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1214:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3866,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6074,
                            "src": "1234:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakedRewardPool_$3939",
                              "typeString": "contract StakedRewardPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakedRewardPool_$3939",
                              "typeString": "contract StakedRewardPool"
                            }
                          ],
                          "id": 3865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1226:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1226:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3868,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "1241:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3860,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3817,
                        "src": "1184:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2395",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2668,
                      "src": "1184:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2395_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2395_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 3869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:65:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3870,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:65:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3872,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3855,
                        "src": "1271:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3873,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "1285:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3871,
                      "name": "_mintShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4416,
                      "src": "1259:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3875,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:34:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3877,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3855,
                        "src": "1316:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3878,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3857,
                        "src": "1330:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3879,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "1339:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1339:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3876,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3825,
                      "src": "1309:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 3881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1309:41:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3882,
                  "nodeType": "EmitStatement",
                  "src": "1304:46:22"
                }
              ]
            },
            "documentation": "@dev Deposits a given amount of StakingToken from sender, increase beneficiary shares\n@param _beneficiary Account to stake for\n@param _amount Units of shares",
            "id": 3884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3855,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3884,
                  "src": "1116:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3857,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3884,
                  "src": "1138:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1115:39:22"
            },
            "returnParameters": {
              "id": 3859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:0:22"
            },
            "scope": 3939,
            "src": "1101:256:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3921,
              "nodeType": "Block",
              "src": "1627:268:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3893,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5986,
                                "src": "1654:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1654:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 3892,
                            "name": "sharesOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3980,
                            "src": "1645:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 3895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1645:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3896,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3888,
                          "src": "1669:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1645:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5354414b45445f5245574152445f504f4f4c3a20776974686472617720696e73756666696369656e74207374616b65",
                        "id": 3898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1678:49:22",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3eb7a0dbec8daa6df0b72831b4ed865dfeaf18791af0376376c7c7efe2027642",
                          "typeString": "literal_string \"STAKED_REWARD_POOL: withdraw insufficient stake\""
                        },
                        "value": "STAKED_REWARD_POOL: withdraw insufficient stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3eb7a0dbec8daa6df0b72831b4ed865dfeaf18791af0376376c7c7efe2027642",
                          "typeString": "literal_string \"STAKED_REWARD_POOL: withdraw insufficient stake\""
                        }
                      ],
                      "id": 3891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5989,
                        5990
                      ],
                      "referencedDeclaration": 5990,
                      "src": "1637:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:91:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3900,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:91:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3902,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "1750:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1750:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3904,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "1762:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3901,
                      "name": "_burnShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4439,
                      "src": "1738:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3906,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:32:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3910,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3886,
                        "src": "1806:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3911,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "1820:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3907,
                        "name": "stakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3817,
                        "src": "1780:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2395",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2643,
                      "src": "1780:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2395_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2395_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3913,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:48:22"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3915,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3886,
                        "src": "1854:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3916,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3888,
                        "src": "1868:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3917,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "1877:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1877:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3914,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3833,
                      "src": "1844:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 3919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:44:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3920,
                  "nodeType": "EmitStatement",
                  "src": "1839:49:22"
                }
              ]
            },
            "documentation": "@dev Remove a given amount of shares from sender, decrease msg.sender shares\n@param _beneficiary Account to withdraw to\n@param _amount Units of shares",
            "id": 3922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3886,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1569:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3888,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3922,
                  "src": "1591:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1568:39:22"
            },
            "returnParameters": {
              "id": 3890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:0:22"
            },
            "scope": 3939,
            "src": "1551:344:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3937,
              "nodeType": "Block",
              "src": "2015:76:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3926,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5986,
                          "src": "2034:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2034:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3929,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5986,
                              "src": "2055:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2055:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3928,
                          "name": "sharesOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3980,
                          "src": "2046:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 3931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2046:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3925,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3922,
                      "src": "2025:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3933,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:42:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3934,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4239,
                      "src": "2077:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3936,
                  "nodeType": "ExpressionStatement",
                  "src": "2077:7:22"
                }
              ]
            },
            "documentation": "@dev Withdraws stake from pool and claims any rewards",
            "id": 3938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1991:2:22"
            },
            "returnParameters": {
              "id": 3924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2015:0:22"
            },
            "scope": 3939,
            "src": "1978:113:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 3940,
        "src": "245:1848:22"
      }
    ],
    "src": "0:2094:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-09-01T04:33:13.921Z",
  "devdoc": {
    "methods": {
      "claim()": {
        "details": "Claim outstanding rewards for sender",
        "return": "uint256 amount claimed"
      },
      "constructor": {
        "details": "StakedRewardPool constructor",
        "params": {
          "_stakingToken": "Token to be staked"
        }
      },
      "earned(address)": {
        "details": "Calculates the amount of rewards earned for a given account",
        "params": {
          "_account": "User for which calculate earned rewards for"
        },
        "return": "uint256 Earned rewards"
      },
      "exit()": {
        "details": "Withdraws stake from pool and claims any rewards"
      },
      "getCurrentTimestamp()": {
        "details": "Get current block timestamp. For easy mocking in test"
      },
      "lastTimeRewardApplicable()": {
        "details": "Gets the last applicable timestamp for this reward period"
      },
      "notifyRewardAmount(uint256)": {
        "details": "Notifies the contract that new rewards have been added. Calculates an updated rewardPerSecond based on the rewards in period.",
        "params": {
          "_reward": "Units of RewardToken that have been added to the pool"
        }
      },
      "rewardPerShare()": {
        "details": "Calculate rewardsPerShare",
        "return": "uint256 rewardsPerShare"
      },
      "sharesOf(address)": {
        "details": "Get the share of a given account",
        "params": {
          "_account": "User for which to retrieve balance"
        },
        "return": "uint256 shares"
      },
      "stake(address,uint256)": {
        "details": "Deposits a given amount of StakingToken from sender, increase beneficiary shares",
        "params": {
          "_amount": "Units of shares",
          "_beneficiary": "Account to stake for"
        }
      },
      "totalShares()": {
        "details": "Get the total number of shares in pool",
        "return": "uint256 total shares"
      },
      "withdraw(address,uint256)": {
        "details": "Remove a given amount of shares from sender, decrease msg.sender shares",
        "params": {
          "_amount": "Units of shares",
          "_beneficiary": "Account to withdraw to"
        }
      }
    },
    "title": "StakedRewardPool"
  },
  "userdoc": {
    "methods": {},
    "notice": "RewardPool that track shares based on staking of a stakingToken"
  }
}